/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import Coneccion.Connecion;
import controlador.ctrl_producto;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import modelo.producto;

/**
 *
 * @author YAMID
 */
public class interstoks extends javax.swing.JInternalFrame {

    int id_product = 0;
    int cantidad = 0;

    public interstoks() {
        initComponents();
        this.cargarcomboproduct();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 =  new vista.PanelDegradado();
        ;
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxproducto = new javax.swing.JComboBox<>();
        txt_stockactual = new javax.swing.JTextField();
        txt_stocknuevo = new javax.swing.JTextField();
        btn_act = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Stock actual");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Producto:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Nuevo Stock");

        jComboBoxproducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione producto", "Item 2", "Item 3", "Item 4" }));
        jComboBoxproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxproductoActionPerformed(evt);
            }
        });

        txt_stocknuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_stocknuevoActionPerformed(evt);
            }
        });

        btn_act.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_act.setText("actualizar stoks");
        btn_act.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Actualizar Soks de Productos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_stockactual, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_stocknuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(btn_act, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel1)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_stockactual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_stocknuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btn_act, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_stocknuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_stocknuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_stocknuevoActionPerformed

    private void btn_actActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actActionPerformed
        if (!jComboBoxproducto.getSelectedItem().equals("Seleccione producto")) {
            if (!txt_stocknuevo.getText().isEmpty()) {
                boolean validacion = validar(txt_stocknuevo.getText().trim());
                if (validacion == true) {
                    if (Integer.parseInt(txt_stocknuevo.getText()) > 0) {
                        ctrl_producto controlproduct = new ctrl_producto();
                        int stockactual = Integer.parseInt(txt_stockactual.getText().trim());
                        int stocknuevo = Integer.parseInt(txt_stocknuevo.getText().trim());
                        stocknuevo = stockactual + stocknuevo;

                        if (controlproduct.actualizarStock(id_product, stocknuevo)) {
                            JOptionPane.showMessageDialog(null, "Producto actualizado.");
                            jComboBoxproducto.setSelectedItem("Seleccione producto");
                            txt_stockactual.setText("");
                            txt_stocknuevo.setText("");
                            this.cargarcomboproduct();
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al actualizar.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La cantidad no puede ser cero.");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Solo se permiten caracteres num√©ricos.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese una cantidad para actualizar el stock.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un producto.");
        }

    }//GEN-LAST:event_btn_actActionPerformed

    private void jComboBoxproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxproductoActionPerformed
        this.mostrarstock();
    }//GEN-LAST:event_jComboBoxproductoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_act;
    private javax.swing.JComboBox<String> jComboBoxproducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txt_stockactual;
    private javax.swing.JTextField txt_stocknuevo;
    // End of variables declaration//GEN-END:variables

    private void cargarcomboproduct() {
        Connecion cn = new Connecion();
        Connection conn = cn.getConnection();

        String sql = " select * from T_producto";
        Statement st;
        try {
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBoxproducto.removeAllItems();
            jComboBoxproducto.addItem("Seleccione producto");
            while (rs.next()) {
                jComboBoxproducto.addItem(rs.getString("nombre"));
            }
        } catch (Exception e) {
            System.out.println("error al cargar los productos en " + e);
        }
    }

    private void mostrarstock() {
        try {
            Connecion cn = new Connecion();
            Connection conn = cn.getConnection();
            String sql = "select * from T_producto where nombre = '" + this.jComboBoxproducto.getSelectedItem() + "'";
            Statement st;
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                id_product = rs.getInt("id_producto");
                cantidad = rs.getInt("cantidad");
                txt_stockactual.setText(String.valueOf(cantidad));
            } else {
            }

        } catch (Exception e) {
        }
    }

    public boolean actualizar_stock(producto object, int id_producto) {
        boolean respuesta = false;

        Connecion conexion = new Connecion();
        Connection cn = conexion.getConnection();

        try {
            PreparedStatement consulta = cn.prepareStatement("update t_producto set cantidad = ? WHERE id_producto = ?");
            consulta.setInt(1, object.getCantidad());
            consulta.setInt(2, id_producto);

            int filasAfectadas = consulta.executeUpdate();
            if (filasAfectadas > 0) {
                respuesta = true;
            }

            consulta.close();
            cn.close();

        } catch (Exception e) {
            System.out.println("Error al actualizar stock: " + e.getMessage());
        }

        return respuesta;
    }

    private boolean validar(String valor) {
        int num;
        try {
            num = Integer.parseInt(valor);
            return true;

        } catch (NumberFormatException e) {
            return false;
        }
    }
}
